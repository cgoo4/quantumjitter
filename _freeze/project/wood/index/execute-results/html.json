{
  "hash": "e125c2fb35a387286f935f37110ac632",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Seeing the Wood for the Trees\"\ndate: \"2019-01-01\"\ncategories: [R, apps, time series]\ndescription: \"Visualising small multiples when crime data leave you unable to see the wood for the trees\"\nbibliography: references.bib\n---\n\n\n![](feature.gif){fig-alt=\"A small clump of trees with a \\\"Little Wood\\\" sign nailed to one of them. It's a dark starry night and a rabbit peers out at a thief tip-toeing away.\"}\n\nIn [Criminal Goings-on](/project/forest) faceting offered a way to get a sense of the data. This is a great visualisation tool building on the principle of small multiples. There may come a point though where the sheer volume of small multiples make it harder to \"see the wood for the trees\". What's an alternative strategy?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(conflicted)\nlibrary(tidyverse)\nconflict_prefer_all(\"dplyr\", quiet = TRUE)\nlibrary(trelliscope)\nlibrary(janitor)\nlibrary(ggfoundry)\nlibrary(paletteer)\nlibrary(usedthese)\n\nconflict_scout()\n```\n:::\n\n\nThis time I'll use Van Gogh's \"The Starry Night\" palette for the feature image and plots. And there are 12 types of criminal offence, so `colorRampPalette` will enable the interpolation of an extended set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_bw())\n\npal_name <- \"vangogh::StarryNight\"\n\npal <- paletteer_d(pal_name)\npal <- colorRampPalette(pal)(12)\n\ndisplay_palette(pal, pal_name)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/theme-1.png){width=100%}\n:::\n:::\n\n\nThe data need a little tidy-up.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_df <- str_c(\n  \"https://data.london.gov.uk/download/recorded_crime_summary/\",\n  \"934f2ddb-5804-4c6a-a17c-bdd79b33430e/\", \n  \"MPS%20Borough%20Level%20Crime%20%28Historical%29.csv\"\n  ) |> \n  read_csv(show_col_types = FALSE) |> \n  clean_names() |> \n  rename_with(\\(x) str_remove_all(x, \"_text|look_up_|_name\")) |> \n  pivot_longer(where(is.numeric), names_to = \"month\", values_to = \"num_offences\") |> \n  mutate(month = parse_number(month) |> str_c(\"01\") |> ymd())\n```\n:::\n\n\nThe original visualisation in [Criminal Goings-on](/project/forest) using ggplot's `facet_wrap` is a little tricky to digest, even when limited to major categories of crime.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrime_df |>\n  summarise(num_offences = sum(num_offences), .by = c(major, borough, month)) |>\n  ggplot(aes(month, num_offences, colour = major, group = major)) +\n  geom_line() +\n  facet_wrap(~borough, scales = \"free_y\", ncol = 4) +\n  labs(\n    x = NULL, y = NULL, title = \"London Crime by Borough\",\n    colour = \"Offence\", caption = \"Source: data.gov.uk\"\n  ) +\n  scale_colour_manual(values = pal) +\n  guides(colour = guide_legend(nrow = 3)) +\n  theme(\n    strip.background = element_rect(fill = pal[4]),\n    legend.position = \"bottom\",\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  ) + \n  guides(col = guide_legend(ncol = 2))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/facet-1.png){width=100%}\n:::\n:::\n\n\nThis \"little project\" was first published using [trelliscopejs](https://hafen.github.io/trelliscopejs/) which offered a really nice alternative approach to the static `facet_wrap`. This has been recently reimagined by the superior and easier-to-use [trelliscope](https://github.com/trelliscope) package. I've updated this post to use the \"latest and greatest\".\n\nClick top-right to pop the display out full screen. Over 1,700 time series plots may be interactively filtered and sorted (for every combination of borough, major/minor category of crime) using summary statistics such as the steepness of the linear trend line.\n\n\n::: {.cell scale='0.5'}\n\n```{.r .cell-code}\npanels_df <- crime_df |>\n  mutate(major = str_wrap(major, 16)) |> \n  ggplot(aes(month, num_offences)) +\n  geom_line(show.legend = FALSE) +\n  geom_smooth(method = \"lm\", se = FALSE, colour = pal[5]) +\n  facet_panels(vars(borough, major, minor), scales = \"free\") + \n  labs(colour = NULL, x = NULL, y = \"Offence Count\")\n\nslope <- \\(x, y) coef(lm(y ~ x))[2]\n\nsummary_df <- crime_df |> \n  summarise(\n    mean_count = mean(num_offences), \n    slope = slope(month, num_offences),\n    .by = c(borough, major, minor))\n  \npanels_df |>\n  as_panels_df(as_plotly = TRUE) |>\n  as_trelliscope_df(\n    name = \"Crime in 'The Smoke'\",\n    description = str_c(\n      \"Timeseries of offences by category \",\n      \"across London's 33 boroughs sourced from data.gov.uk.\"\n    )\n  ) |>\n  left_join(summary_df, join_by(borough, major, minor)) |>\n  set_var_labels(\n    major = \"Major Category of Offence\",\n    minor = \"Minor Category of Offence\",\n    mean_count = \"Average Offences by Borough & Offence Category\",\n    slope = \"Steepness of a Linear Trendline\"\n  ) |>\n  set_default_sort(c(\"slope\"), dirs = \"desc\") |>\n  set_tags(\n    stats = c(\"mean_count\", \"slope\"),\n    info = c(\"borough\", \"major\", \"minor\")\n  ) |>\n  set_theme(\n    primary = pal[1],\n    primary2 = pal[1],\n    primary3 = pal[5],\n    text = pal[1],\n    text2 = pal[4],\n    bars = pal[2]\n  ) |>\n  view_trelliscope()\n```\n\n  <div style=\"width: 100%; height: 500px; padding-bottom: 5px;\"><iframe\n      style=\"\n        transform: scale(0.5);\n        width: 200%;\n        height: 1000px;\n        margin: 0;\n        padding: 0;\n        border: 1px solid #efefef;\n        transform-origin: top left;\n      \"\n      src=\"index_files/figure-html//trelliscope/index.html\"\n      title=\"Crime in 'The Smoke'\"\n      width=\"200%px\"\n      height=\"1000pxpx\"\n      allowfullscreen\n      style=\"margin: 0; padding: 0; border: 1px solid #efefef;\"\n    >\n    </iframe></div>\n:::\n\n\n### \n\n## R Toolbox\n\nSummarising below the packages and functions used in this post enables me to separately create a [toolbox visualisation](/project/box) summarising the usage of packages and functions across all posts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nused_here()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"usedthese table table-striped\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Package </th>\n   <th style=\"text-align:left;\"> Function </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> base </td>\n   <td style=\"text-align:left;\"> c[5], library[7], mean[1], sum[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> conflicted </td>\n   <td style=\"text-align:left;\"> conflict_prefer_all[1], conflict_scout[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> dplyr </td>\n   <td style=\"text-align:left;\"> join_by[1], left_join[1], mutate[2], rename_with[1], summarise[2], vars[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ggfoundry </td>\n   <td style=\"text-align:left;\"> display_palette[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ggplot2 </td>\n   <td style=\"text-align:left;\"> aes[2], element_rect[1], element_text[1], facet_wrap[1], geom_line[2], geom_smooth[1], ggplot[2], guide_legend[2], guides[2], labs[2], scale_colour_manual[1], theme[1], theme_bw[1], theme_set[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> grDevices </td>\n   <td style=\"text-align:left;\"> colorRampPalette[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> janitor </td>\n   <td style=\"text-align:left;\"> clean_names[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> lubridate </td>\n   <td style=\"text-align:left;\"> ymd[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> paletteer </td>\n   <td style=\"text-align:left;\"> paletteer_d[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> readr </td>\n   <td style=\"text-align:left;\"> parse_number[1], read_csv[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> stats </td>\n   <td style=\"text-align:left;\"> coef[1], lm[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> stringr </td>\n   <td style=\"text-align:left;\"> str_c[3], str_remove_all[1], str_wrap[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tidyr </td>\n   <td style=\"text-align:left;\"> pivot_longer[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tidyselect </td>\n   <td style=\"text-align:left;\"> where[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> trelliscope </td>\n   <td style=\"text-align:left;\"> as_panels_df[1], as_trelliscope_df[1], facet_panels[1], set_default_sort[1], set_tags[1], set_theme[1], set_var_labels[1], view_trelliscope[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> usedthese </td>\n   <td style=\"text-align:left;\"> used_here[1] </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}