{
  "hash": "8c6742f8ce56343042ad0597dae34a66",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Favourite Things\"\ndate: \"2020-07-26\"\ncategories: [R, web scraping]\ndescription: \"R packages & functions that make doing data science a joy based on usage across projects\"\nbibliography: references.bib\n---\n\n\n![](feature-1.png){fig-alt=\"Wordcloud emphasising this site's most used R packages and functions\"}\n\nEach [project](/project/) closes with a table summarising the R tools used. By aggregating the package and function usage across all projects, there's an opportunity to:\n\n-   Spot the use of superseded functions like `map_dfr`\n\n-   Check for usage consistency, e.g. `clock::date_today` versus `Sys.Date`\n\n-   See where it would be most useful to keep an eye on package version updates\n\nSince starting this in 2017, functions like tidyr's `spread` and `gather` have been superseded by `pivot_wider` and `pivot_longer`. Newer packages have emerged like [tidyclust](https://github.com/EmilHvitfeldt/tidyclust), which brings cluster modelling to tidymodels (now used in [Finding Happiness in 'The Smoke'](https://www.quantumjitter.com/project/happiness/)). [bslib](https://rstudio.github.io/bslib/) has brought improvements to the latest shiny app version embedded in [Plots Thicken](https://www.quantumjitter.com/project/thicken/). The paletteer package has put it's arms around the myriad palette packages out there. And scales' `cut_short_scale` assisted with plot labelling.\n\nMore recently, dplyr and purrr have presented a host of enhancements. For example, the `.by` argument in `mutate` and friends offers a concise temporary alternative to `group_by` and `ungroup` in many situations. Joins have been enhanced (e.g. to support inequality conditions) with the addition of `join_by` to dplyr. And changes in the `map_` family introduce `list_rbind` and associates with `map_dfr`, for example, now superseded.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(conflicted)\nlibrary(tidyverse)\nconflict_prefer_all(\"dplyr\", quiet = TRUE)\nlibrary(tidytext)\nlibrary(rvest)\nlibrary(paletteer)\nlibrary(janitor)\nlibrary(glue)\nlibrary(ggwordcloud)\nlibrary(patchwork)\nlibrary(clock)\nlibrary(geomtextpath)\nlibrary(usedthese)\n\nconflict_scout()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_bw())\n\nn <- 6\npalette <- \"LaCroixColoR::CranRaspberry\"\n\ncols <- paletteer_d(palette, n = n)\n\ntibble(x = 1:n, y = 1) |>\n  ggplot(aes(x, y, fill = fct_inorder(cols))) +\n  geom_col(colour = \"white\") +\n  geom_label(aes(label = cols |> str_remove(\"FF$\")), \n             size = 4, vjust = 2, fill = \"white\") +\n  annotate(\n    \"label\",\n    x = (n + 1) / 2, y = 0.5,\n    label = palette,\n    fill = \"white\",\n    alpha = 0.8,\n    size = 6\n  ) +\n  scale_fill_manual(values = as.character(cols)) +\n  theme_void() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/theme-1.png){width=100%}\n:::\n:::\n\n\nSeparation of tidyverse and non-tidyverse packages may be achieved by using the likes of `tidyverse_packages` which lists all packages in the tidyverse.\n\n-   [tidyverse](https://www.tidyverse.org/packages/)\n-   [tidymodels](https://www.tidymodels.org/packages/)\n-   [tidyverts](https://tidyverts.org)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy <-\n  c(\n    tidyverse::tidyverse_packages(),\n    fpp3::fpp3_packages(),\n    tidymodels::tidymodels_packages()\n  ) |>\n  unique()\n```\n:::\n\n\n`used_here()` has already been used in [Quantum Jitter projects](https://www.quantumjitter.com/project/) to generate a usage table at the foot of each project with the CSS class *usedthese*. `used_there()` may now be used to web-scrape all the tables with this class to aggregate package and function usage data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_packages <- c(\n  \"stats\",\n  \"graphics\",\n  \"grDevices\",\n  \"utils\",\n  \"datasets\",\n  \"methods\",\n  \"base\"\n)\n\nused_df <-\n  used_there(\"https://www.quantumjitter.com/project/\") |>\n  mutate(multiverse = case_match(\n    Package,\n    tidy ~ \"tidy\",\n    base_packages ~ \"base\",\n    .default = \"special\"\n  ))\n\nn_url <- used_df |> summarise(n_distinct(url)) |> pull()\n\npack_df <- used_df |>\n  count(Package, multiverse, wt = n) |>\n  mutate(name = \"package\")\n\nfun_df <- used_df |>\n  count(Function, multiverse, wt = n) |>\n  mutate(name = \"function\")\n\npackfun_df <- pack_df |>\n  bind_rows(fun_df) |>\n  arrange(desc(n)) |>\n  mutate(\n    packfun = coalesce(Package, Function),\n    name = fct_rev(name),\n    .by = name\n  )\n```\n:::\n\n\nMy most commonly used packages and functions are revealed with the help of geomtextpath [@geomtextpath] and a pair of \"Catherine wheel\" plots.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprep_data <- \\(x, y){\n  used_df |>\n    count({{ x }}, multiverse, wt = n) |>\n    filter(n > y) |>\n    arrange(multiverse, n) |>\n    mutate(row = row_number())\n}\n\nradial_df <- prep_data(Package, 10)\nradial_df2 <- prep_data(Function, 20)\n\nprep_lines <- \\(data){\n  data |>\n    summarise(\n      start = min(row),\n      end = max(row),\n      .by = multiverse\n    )\n}\n\nlines_df <- prep_lines(radial_df)\nlines_df2 <- prep_lines(radial_df2)\n\nprep_plot <- \\(data, data2, x){\n  data |>\n    mutate({{ x }} := fct_reorder({{ x }}, row)) |>\n    ggplot(aes({{ x }}, n, fill = multiverse, colour = multiverse)) +\n    geom_col(colour = cols[6]) +\n    geom_textpath(aes(label = n), colour = \"white\", vjust = -0.2, size = 3) +\n    geom_textpath(aes(label = {{ x }}),\n      size = 3, colour = \"black\",\n      text_only = TRUE, offset = unit(-10, \"pt\"), angle = -70, hjust = 1\n    ) +\n    geom_textsegment(\n      aes(start, 0.6, xend = end, yend = 0.6, label = multiverse),\n      data = data2,\n      linewidth = 1,\n      size = 2, gap = FALSE,\n      offset = unit(-7, \"pt\")\n    ) +\n    coord_radial(inner.radius = 0.25) +\n    scale_y_log10() +\n    scale_fill_manual(values = cols[c(1, 4, 5)]) +\n    scale_colour_manual(values = cols[c(1, 4, 5)]) +\n    theme_void() +\n    theme(\n      axis.text.x = element_blank(),\n      legend.position = \"none\"\n    )\n}\n\np1 <- prep_plot(radial_df, lines_df, Package)\np2 <- prep_plot(radial_df2, lines_df2, Function)\n\np1 + p2 + plot_annotation(\n  title = \"Top Package & Function Usage\",\n  subtitle = glue(\"Across {n_url} Projects\"),\n  theme = theme(\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5)\n  )\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/radial-1.png){width=100%}\n:::\n:::\n\n\nThis last code chunk generates the word cloud for use as the feature image for this project.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed = 123\n\npackfun_df |>\n  mutate(angle = 45 * sample(-2:2, n(), \n                             replace = TRUE, \n                             prob = c(1, 1, 4, 1, 1))) |>\n  ggplot(aes(\n    label = packfun,\n    size = n,\n    colour = multiverse,\n    angle = angle\n  )) +\n  geom_text_wordcloud(\n    eccentricity = 1,\n    grid_margin = 0.95,\n    seed = 789\n  ) +\n  scale_size_area(max_size = 20) +\n  scale_colour_manual(values = cols[c(1, 6, 5)]) +\n  theme_void() +\n  theme(plot.background = element_rect(fill = \"white\"))\n```\n\n::: {.cell-output-display}\n![](feature-1.png){width=100%}\n:::\n:::\n\n\n## R Toolbox\n\nThis project's code too should be included in my \"favourite things\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\nused_here()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"usedthese table table-striped\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Package </th>\n   <th style=\"text-align:left;\"> Function </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> base </td>\n   <td style=\"text-align:left;\"> as.character[1], c[6], library[12], max[1], min[1], sample[1], unique[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> conflicted </td>\n   <td style=\"text-align:left;\"> conflict_prefer_all[1], conflict_scout[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> dplyr </td>\n   <td style=\"text-align:left;\"> arrange[2], bind_rows[1], case_match[1], coalesce[1], count[3], desc[1], filter[1], mutate[7], n[1], n_distinct[1], pull[1], row_number[1], summarise[2] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> forcats </td>\n   <td style=\"text-align:left;\"> fct_inorder[1], fct_reorder[1], fct_rev[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> geomtextpath </td>\n   <td style=\"text-align:left;\"> geom_textpath[2], geom_textsegment[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ggplot2 </td>\n   <td style=\"text-align:left;\"> aes[7], annotate[1], coord_radial[1], element_blank[1], element_rect[1], element_text[2], geom_col[2], geom_label[1], ggplot[3], scale_colour_manual[2], scale_fill_manual[2], scale_size_area[1], scale_y_log10[1], theme[4], theme_bw[1], theme_set[1], theme_void[3] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ggwordcloud </td>\n   <td style=\"text-align:left;\"> geom_text_wordcloud[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> glue </td>\n   <td style=\"text-align:left;\"> glue[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> grid </td>\n   <td style=\"text-align:left;\"> unit[2] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> paletteer </td>\n   <td style=\"text-align:left;\"> paletteer_d[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> patchwork </td>\n   <td style=\"text-align:left;\"> plot_annotation[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> stringr </td>\n   <td style=\"text-align:left;\"> str_remove[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tibble </td>\n   <td style=\"text-align:left;\"> tibble[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tidymodels </td>\n   <td style=\"text-align:left;\"> tidymodels_packages[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tidyverse </td>\n   <td style=\"text-align:left;\"> tidyverse_packages[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> usedthese </td>\n   <td style=\"text-align:left;\"> used_here[1], used_there[1] </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}