{
  "hash": "c092f10d782337bc34b22b7f80ed2feb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Digging Deep\"\ndate: \"2018-01-10\"\ncategories: [R, time series, correlation, apps, tables, textual analysis]\ndescription: \"Do we see more planning applications when house sales are depressed?\"\nbibliography: references.bib\n---\n\n\n![](feature.gif){fig-alt=\"A spade is seen tossing fresh dirt from a deep hole. A granted planning permission and an empty new spade box lie nearby.\"}\n\nIn [House Sales](/project/sw10) I looked at how a series of events damped down sales. By combining these sales data with planning applications I'd like to see if home owners \"start digging\" when they can't sell.\n\nPlanning data is harvested with the kind permission of The Royal Borough of Kensington and Chelsea (RBKC). The code for these code chunks is not rendered out of courtesy to RBKC.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(conflicted)\nlibrary(tidyverse)\nconflict_prefer_all(\"dplyr\", quiet = TRUE)\nconflict_prefer(\"as_date\", \"lubridate\")\nlibrary(rvest)\nlibrary(SPARQL)\nlibrary(quanteda)\nlibrary(quanteda.textstats)\nlibrary(tictoc)\nlibrary(htmlwidgets)\nlibrary(clock)\nlibrary(fabletools)\nlibrary(feasts)\nlibrary(tsibble)\nlibrary(DT)\nlibrary(ggfoundry)\nlibrary(paletteer)\nlibrary(usedthese)\n\nconflict_scout()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_bw())\n\npal_name <- \"wesanderson::Darjeeling2\"\n\npal <- paletteer_d(pal_name)\n\ndisplay_palette(pal, pal_name)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/theme-1.png){width=100%}\n:::\n:::\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncase_df <- readRDS(\"case.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \n  \"https://www.freemaptools.com/download/full-postcodes/ukpostcodes.zip\"\n\nfile_name <- basename(url)\n\nurl |> basename\n\ndownload.file(url, file_name)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngeocodes <- read_csv(\"ukpostcodes.zip\")\n```\n:::\n\n\nThe data need a bit of wrangling. And there is also the opportunity to try the newest column-wise enhancements to mutate: `mutate_if` and `mutate_at` have been superseded by `mutate` with `across`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwide_df <- case_df |>\n  pivot_wider(names_from = X1, values_from = X2) |>\n  select(all_of(plan_colnames)) |>\n  mutate(\n    across(c(property_list, property_cons), \\(vec) na_if(vec, \"N/A\")),\n    across(c(app_comp, decision), \\(vec) na_if(vec, \"\"))\n  )\n\ntidy_df <- wide_df |>\n  mutate(\n    dec_date = date_parse(dec_date, format = \"%d %b %Y\"),\n    dec_year = get_year(dec_date),\n    proposal_dev = str_to_lower(proposal_dev),\n    property_pcode = str_extract(property_add, \"SW10[\\\\s]?\\\\d[[:alpha:]]{2}\"),\n    property_pcode = str_replace(property_pcode, \"SW10(?!\\\\s)\", \"SW10 \"),\n    app_comp = str_to_upper(app_comp) |>\n      str_remove_all(\"[:punct:]\") |>\n      str_remove_all(\"\\\\b(?:AND|LTD|CO|LIMITED|UK|GROUP|LLP)\\\\b\") |>\n      str_squish(),\n    decision = fct_explicit_na(decision, na_level = \"Other\"),\n    decision = str_replace(decision, \"/\", \" / \"),\n    dec_lump = fct_lump(decision, prop = 0.03),\n    basement = if_else(str_detect(proposal_dev, \"basement\"), \"Yes\", \"No\"),\n    property_listed = case_match(\n      property_list,\n      c(\"II\", \"II*\", \"2\", \"2*\") ~ \"Yes\",\n      .default = \"No\"\n    ),\n    app_comp = replace_na(app_comp, \"None\"),\n    property_cons = if_else(property_cons == \"\" | is.na(property_cons),\n      \"None\", property_cons\n    ),\n    proposal_dev = if_else(proposal_dev == \"\" | is.na(proposal_dev),\n      \"None\", proposal_dev\n    ),\n    across(where(is.character), str_trim),\n    across(c(\"app_comp\", \"proposal_type\", \"property_cons\"), factor)\n  ) |>\n  left_join(geocodes, by = join_by(property_pcode == postcode))\n\ntidy_df |>\n  count(dec_lump) |>\n  arrange(desc(n)) |>\n  rename(\"Decision\" = dec_lump, \"Count\" = n)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Decision                             | Count|\n|:------------------------------------|-----:|\n|Grant Planning Permission / Consent  |  5336|\n|Withdrawn by Applicant               |  1123|\n|Other                                |   847|\n|Refuse Planning Permission / Consent |   752|\n|Discharge of Conditions - Grant      |   626|\n|Raise No Objection                   |   418|\n\n</div>\n:::\n:::\n\n\nquanteda [@quanteda] to look at key words in context (kwic).\n\n\n\n\n\n\n```{=html}\n<iframe seamless src=\"/project/planning/dt1.html\" width=\"100%\" height=\"500\"></iframe>\n```\n\nI'd like to review planning applications by theme. So I'll first need to get a sense of what the themes are by plotting the words which appear most frequently.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplus_words <-\n  c(\"new\",\n    \"pp\",\n    \"two\",\n    \"one\",\n    \"dated\",\n    \"withdrawn\",\n    \"flat\",\n    \"x\",\n    \"permission\",\n    \"rear\",\n    \"first\",\n    \"second\",\n    \"planning\",\n    \"floor\",\n    \"erection\"\n  )\n\nwords <- tidy_df |> \n  corpus(text_field = \"proposal_dev\", \n         doc_vars = c(\"dec_date\", \"proposal_type\", \n                      \"decision\", \"dec_year\")) |> \n  tokens(remove_numbers = TRUE, remove_punct = TRUE) |> \n  dfm() |> \n  dfm_remove(c(stopwords(\"english\"), plus_words)) |> \n  textstat_frequency() |> \n  slice_head(n = 30) |> \n  mutate(feature = fct_reorder(feature, frequency))\n\nwords |> \n  ggplot(aes(frequency, feature)) +\n  geom_col(fill = pal[4]) +\n  labs(x = NULL, y = NULL, \n       title = \"Frequent Planning Proposal Words\",\n       caption = \"Source: RBKC Planning Search\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/dfm-1.png){width=100%}\n:::\n:::\n\n\nNow I can create a theme feature.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremapped_df <- tidy_df |>\n  mutate(\n    theme = case_when(\n      str_detect(proposal_dev, \"basem|excav\") ~ \"Basement or Excavation\",\n      str_detect(proposal_dev, \"xten|vatory|torey\") ~ \"Extension, Conservatory \\nor Storey\",\n      str_detect(proposal_dev, \"windo|doo\") ~ \"Windows or Doors\",\n      str_detect(proposal_dev, \"roof\") ~ \"Roof\",\n      str_detect(proposal_dev, \"rrac|dsc|garde\") | \n        str_detect(proposal_type, \"Tree\") ~ \"Trees, Landscaping, \\nGarden or Terrace\",\n      .default = \"Other\"\n    ),\n    outcome = case_when(\n      str_detect(decision, \"Gran|No Ob|Accep|Lawf\") ~ \"Positive\",\n      str_detect(decision, \"Refus\") ~ \"Refuse\",\n      str_detect(decision, \"Withdr\") ~ \"Withdrawn\",\n      .default = \"Other\"\n    )\n  )\n```\n:::\n\n\nI also want to compare house sales with planning applications over time. So, I'll re-use the SPARQL query from [House Sales](/project/sw10).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntic()\n\nendpoint <- \"https://landregistry.data.gov.uk/landregistry/query\"\n\nquery <- 'PREFIX  text: <http://jena.apache.org/text#>\nPREFIX  ppd:  <http://landregistry.data.gov.uk/def/ppi/>\nPREFIX  lrcommon: <http://landregistry.data.gov.uk/def/common/>\n  \nSELECT  ?item ?ppd_propertyAddress ?ppd_hasTransaction ?ppd_pricePaid ?ppd_transactionCategory ?ppd_transactionDate ?ppd_transactionId ?ppd_estateType ?ppd_newBuild ?ppd_propertyAddressCounty ?ppd_propertyAddressDistrict ?ppd_propertyAddressLocality ?ppd_propertyAddressPaon ?ppd_propertyAddressPostcode ?ppd_propertyAddressSaon ?ppd_propertyAddressStreet ?ppd_propertyAddressTown ?ppd_propertyType ?ppd_recordStatus\n\nWHERE\n{ ?ppd_propertyAddress text:query _:b0 .\n  _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> lrcommon:postcode .\n  _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest> _:b1 .\n  _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> \"( SW10 )\" .\n  _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest> _:b2 .\n  _:b2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> 3000000 .\n  _:b2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest> <http://www.w3.org/1999/02/22-rdf-syntax-ns#nil> .\n  ?item ppd:propertyAddress ?ppd_propertyAddress .\n  ?item ppd:hasTransaction ?ppd_hasTransaction .\n  ?item ppd:pricePaid ?ppd_pricePaid .\n  ?item ppd:transactionCategory ?ppd_transactionCategory .\n  ?item ppd:transactionDate ?ppd_transactionDate .\n  ?item ppd:transactionId ?ppd_transactionId\n  \n  OPTIONAL { ?item ppd:estateType ?ppd_estateType }\n  OPTIONAL { ?item ppd:newBuild ?ppd_newBuild }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:county ?ppd_propertyAddressCounty }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:district ?ppd_propertyAddressDistrict }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:locality ?ppd_propertyAddressLocality }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:paon ?ppd_propertyAddressPaon }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:postcode ?ppd_propertyAddressPostcode }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:saon ?ppd_propertyAddressSaon }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:street ?ppd_propertyAddressStreet }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:town ?ppd_propertyAddressTown }\n  OPTIONAL { ?item ppd:propertyType ?ppd_propertyType }\n  OPTIONAL { ?item ppd:recordStatus ?ppd_recordStatus }\n}'\n\nsales <- SPARQL(endpoint, query)\n\ntoc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n53.047 sec elapsed\n```\n\n\n:::\n:::\n\n\nLet's now bind the data into one tibble and summarise the transaction volumes over time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsales_df <- sales$results |> \n  as_tibble() |>\n  mutate(\n    date = as_datetime(ppd_transactionDate) |> as_date(),\n    dataset = \"Sales\"\n  ) |>\n  summarise(volume = n(), .by = c(date, dataset))\n\napp_df <- remapped_df |>\n  mutate(\n    date = dec_date,\n    dataset = \"Planning\"\n  ) |>\n  summarise(volume = n(), .by = c(date, dataset))\n\ncompare_df <- bind_rows(app_df, sales_df)\n\nsummary_df <- compare_df |>\n  filter(date >= min(sales_df$date)) |> \n  mutate(date = date_build(get_year(date), get_month(date), \"last\")) |> \n  summarise(volume = sum(volume), .by = c(date, dataset))\n```\n:::\n\n\nThe visualisation below does suggest that home owners \"start digging\" when they can't sell. At least in this part of London.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmonthly_ts <- summary_df |> \n  mutate(date = yearmonth(date)) |> \n  as_tsibble(key = dataset, index = date)\n\nmonthly_ts |> \n  ggplot(aes(date, volume, colour = dataset)) +\n  geom_line(key_glyph = \"timeseries\") +\n  scale_colour_manual(values = pal[c(2, 3)]) +\n  labs(x = NULL, y = NULL, colour = NULL,\n       title = \"Monthly Property Transaction Volume in SW10\",\n       caption = \"Sources: Land Registry & RBKC Planning\"\n       )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/viisualise-1.png){width=100%}\n:::\n:::\n\n\nTime-series data may have an underlying trend and a seasonality pattern. I'll use the seasonal package to decompose each time-series. Each exhibit annual seasonality which evolves over time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmonthly_ts |>\n  model(stl = STL(volume ~ season())) |>\n  components() |> \n  autoplot() +\n  scale_colour_manual(values = pal[c(2, 3)]) +\n  labs(x = NULL, title = \"Time Series Decomposition\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/decomposition-1.png){width=100%}\n:::\n:::\n\n\nWe also see some inverse correlation between the two time-series re-affirming the visual conclusion that planning applications increase when the housing market is depressed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmonthly_ts |> \n  pivot_wider(names_from = dataset, values_from = volume) |>\n  CCF(Sales, Planning, lag_max = 6) |> \n  autoplot() +\n  labs(title = \"Correlation Between Sales & Planning\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/correlation-1.png){width=100%}\n:::\n:::\n\n\nThe overall volumes of planning applications and house transactions in SW10 are fairly similar.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_df |>\n  summarise(total = sum(volume), .by = dataset) |> \n  rename(\"Dataset\" = dataset, \"Count\" = total)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Dataset  | Count|\n|:--------|-----:|\n|Planning |  8926|\n|Sales    | 12286|\n\n</div>\n:::\n:::\n\n\nEarlier, I added a \"theme\" feature to the data. So let's take a look at the volume of applications over time faceted by theme and coloured by the outcome. We see that the rise in planning applications is fuelled by basements or excavations, and work on outside landscaping and terracing. So perhaps we do \"dig\" when we can't sell.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremapped_df |>\n  ggplot(aes(dec_year, fill = outcome)) +\n  geom_bar() +\n  facet_wrap( ~ theme, nrow = 2) +\n  scale_fill_manual(values = pal[c(1:4)]) +\n  labs(\n    title = \"Planning Application Themes\",\n    x = NULL, y = NULL,\n    caption = \"Source: RBKC Planning Search\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/trend-1.png){width=100%}\n:::\n:::\n\n\n## R Toolbox\n\nSummarising below the packages and functions used in this post enables me to separately create a [toolbox visualisation](/project/box) summarising the usage of packages and functions across all posts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nused_here()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"usedthese table table-striped\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Package </th>\n   <th style=\"text-align:left;\"> Function </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> DT </td>\n   <td style=\"text-align:left;\"> datatable[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SPARQL </td>\n   <td style=\"text-align:left;\"> SPARQL[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> base </td>\n   <td style=\"text-align:left;\"> as.numeric[1], basename[1], c[16], is.na[2], library[16], min[1], readRDS[1], saveRDS[1], sum[2] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> clock </td>\n   <td style=\"text-align:left;\"> date_build[1], date_parse[1], get_month[1], get_year[2] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> conflicted </td>\n   <td style=\"text-align:left;\"> conflict_prefer[1], conflict_prefer_all[1], conflict_scout[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> dplyr </td>\n   <td style=\"text-align:left;\"> across[4], arrange[1], bind_rows[2], case_match[1], case_when[2], count[1], desc[1], filter[2], if_else[3], join_by[1], left_join[1], mutate[9], n[2], na_if[2], rename[2], select[2], slice_head[1], summarise[4] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> fabletools </td>\n   <td style=\"text-align:left;\"> components[1], model[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> feasts </td>\n   <td style=\"text-align:left;\"> CCF[1], STL[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> forcats </td>\n   <td style=\"text-align:left;\"> fct_explicit_na[1], fct_lump[1], fct_reorder[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ggfoundry </td>\n   <td style=\"text-align:left;\"> display_palette[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ggplot2 </td>\n   <td style=\"text-align:left;\"> aes[3], autoplot[2], element_text[1], facet_wrap[1], geom_bar[1], geom_col[1], geom_line[1], ggplot[3], labs[5], scale_colour_manual[2], scale_fill_manual[1], theme[1], theme_bw[1], theme_set[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> htmlwidgets </td>\n   <td style=\"text-align:left;\"> saveWidget[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> lubridate </td>\n   <td style=\"text-align:left;\"> as_date[1], as_datetime[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> paletteer </td>\n   <td style=\"text-align:left;\"> paletteer_d[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> purrr </td>\n   <td style=\"text-align:left;\"> list_rbind[2], map[2] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> quanteda </td>\n   <td style=\"text-align:left;\"> corpus[2], dfm[1], dfm_remove[1], kwic[1], phrase[1], tokens[2] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> quanteda.textstats </td>\n   <td style=\"text-align:left;\"> textstat_frequency[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> readr </td>\n   <td style=\"text-align:left;\"> read_csv[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> rvest </td>\n   <td style=\"text-align:left;\"> html_attr[1], html_element[2], html_elements[2], html_table[1], html_text[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> stopwords </td>\n   <td style=\"text-align:left;\"> stopwords[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> stringr </td>\n   <td style=\"text-align:left;\"> str_c[3], str_detect[11], str_extract[1], str_remove_all[2], str_replace[2], str_squish[1], str_to_lower[1], str_to_upper[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tibble </td>\n   <td style=\"text-align:left;\"> as_tibble[2], tibble[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tictoc </td>\n   <td style=\"text-align:left;\"> tic[2], toc[2] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tidyr </td>\n   <td style=\"text-align:left;\"> pivot_wider[2], replace_na[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tidyselect </td>\n   <td style=\"text-align:left;\"> all_of[1], where[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tsibble </td>\n   <td style=\"text-align:left;\"> as_tsibble[1], yearmonth[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> usedthese </td>\n   <td style=\"text-align:left;\"> used_here[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> utils </td>\n   <td style=\"text-align:left;\"> download.file[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> xml2 </td>\n   <td style=\"text-align:left;\"> read_html[3] </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}